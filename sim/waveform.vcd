$timescale
 1ps
$end

$scope module _vcs_unit__1989571668 $end
$comment Unit is _vcs_unit__1989571668 $end
$upscope $end

$scope module top $end
$comment Unit is _vcs_unit__1989571668 $end
$var reg        1 "    clk $end

$scope module IFC $end
$comment Unit is _vcs_unit__1989571668 $end
$var reg        1 "    clk $end
$var reg        1 #    ld $end
$var reg      128 $    key [127:0] $end
$var reg      128 %    text_in [127:0] $end
$var reg        1 &    done $end
$var reg      128 '    text_out [127:0] $end
$var reg        1 (    rst $end

$scope begin cb $end
$var reg        1 )    rst $end
$var reg        1 *    ld $end
$var reg      128 +    key [127:0] $end
$var reg      128 ,    text_in [127:0] $end
$var reg        1 -    done $end
$var reg      128 .    text_out [127:0] $end
$upscope $end

$scope fork dut $end
$var reg        1 "    clk $end
$var reg        1 (    rst $end
$var reg      128 $    key [127:0] $end
$var reg      128 %    text_in [127:0] $end
$var reg        1 #    ld $end
$var reg      128 '    text_out [127:0] $end
$var reg        1 &    done $end
$upscope $end

$scope fork bench $end
$upscope $end
$upscope $end

$scope module dut $end
$comment Unit is _vcs_unit__1989571668 $end
$comment Port d refers to top.IFC.dut $end

$scope module cipher $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       1 /    clk $end
$var wire       1 0    rst $end
$var wire       1 1    ld $end
$var reg        1 2    done $end
$var wire     128 3    key [127:0] $end
$var wire     128 4    text_in [127:0] $end
$var reg      128 5    text_out [127:0] $end
$var wire      32 6    w0 [31:0] $end
$var wire      32 7    w1 [31:0] $end
$var wire      32 8    w2 [31:0] $end
$var wire      32 9    w3 [31:0] $end
$var reg      128 :    text_in_r [127:0] $end
$var reg        8 ;    sa00 [7:0] $end
$var reg        8 <    sa01 [7:0] $end
$var reg        8 =    sa02 [7:0] $end
$var reg        8 >    sa03 [7:0] $end
$var reg        8 ?    sa10 [7:0] $end
$var reg        8 @    sa11 [7:0] $end
$var reg        8 A    sa12 [7:0] $end
$var reg        8 B    sa13 [7:0] $end
$var reg        8 C    sa20 [7:0] $end
$var reg        8 D    sa21 [7:0] $end
$var reg        8 E    sa22 [7:0] $end
$var reg        8 F    sa23 [7:0] $end
$var reg        8 G    sa30 [7:0] $end
$var reg        8 H    sa31 [7:0] $end
$var reg        8 I    sa32 [7:0] $end
$var reg        8 J    sa33 [7:0] $end
$var wire       8 K    sa00_next [7:0] $end
$var wire       8 L    sa01_next [7:0] $end
$var wire       8 M    sa02_next [7:0] $end
$var wire       8 N    sa03_next [7:0] $end
$var wire       8 O    sa10_next [7:0] $end
$var wire       8 P    sa11_next [7:0] $end
$var wire       8 Q    sa12_next [7:0] $end
$var wire       8 R    sa13_next [7:0] $end
$var wire       8 S    sa20_next [7:0] $end
$var wire       8 T    sa21_next [7:0] $end
$var wire       8 U    sa22_next [7:0] $end
$var wire       8 V    sa23_next [7:0] $end
$var wire       8 W    sa30_next [7:0] $end
$var wire       8 X    sa31_next [7:0] $end
$var wire       8 Y    sa32_next [7:0] $end
$var wire       8 Z    sa33_next [7:0] $end
$var wire       8 [    sa00_sub [7:0] $end
$var wire       8 \    sa01_sub [7:0] $end
$var wire       8 ]    sa02_sub [7:0] $end
$var wire       8 ^    sa03_sub [7:0] $end
$var wire       8 _    sa10_sub [7:0] $end
$var wire       8 `    sa11_sub [7:0] $end
$var wire       8 a    sa12_sub [7:0] $end
$var wire       8 b    sa13_sub [7:0] $end
$var wire       8 c    sa20_sub [7:0] $end
$var wire       8 d    sa21_sub [7:0] $end
$var wire       8 e    sa22_sub [7:0] $end
$var wire       8 f    sa23_sub [7:0] $end
$var wire       8 g    sa30_sub [7:0] $end
$var wire       8 h    sa31_sub [7:0] $end
$var wire       8 i    sa32_sub [7:0] $end
$var wire       8 j    sa33_sub [7:0] $end
$var wire       8 [    sa00_sr [7:0] $end
$var wire       8 \    sa01_sr [7:0] $end
$var wire       8 ]    sa02_sr [7:0] $end
$var wire       8 ^    sa03_sr [7:0] $end
$var wire       8 `    sa10_sr [7:0] $end
$var wire       8 a    sa11_sr [7:0] $end
$var wire       8 b    sa12_sr [7:0] $end
$var wire       8 _    sa13_sr [7:0] $end
$var wire       8 e    sa20_sr [7:0] $end
$var wire       8 f    sa21_sr [7:0] $end
$var wire       8 c    sa22_sr [7:0] $end
$var wire       8 d    sa23_sr [7:0] $end
$var wire       8 j    sa30_sr [7:0] $end
$var wire       8 g    sa31_sr [7:0] $end
$var wire       8 h    sa32_sr [7:0] $end
$var wire       8 i    sa33_sr [7:0] $end
$var wire       8 k    sa00_mc [7:0] $end
$var wire       8 l    sa01_mc [7:0] $end
$var wire       8 m    sa02_mc [7:0] $end
$var wire       8 n    sa03_mc [7:0] $end
$var wire       8 o    sa10_mc [7:0] $end
$var wire       8 p    sa11_mc [7:0] $end
$var wire       8 q    sa12_mc [7:0] $end
$var wire       8 r    sa13_mc [7:0] $end
$var wire       8 s    sa20_mc [7:0] $end
$var wire       8 t    sa21_mc [7:0] $end
$var wire       8 u    sa22_mc [7:0] $end
$var wire       8 v    sa23_mc [7:0] $end
$var wire       8 w    sa30_mc [7:0] $end
$var wire       8 x    sa31_mc [7:0] $end
$var wire       8 y    sa32_mc [7:0] $end
$var wire       8 z    sa33_mc [7:0] $end
$var reg        1 {    ld_r $end
$var reg        4 |    dcnt [3:0] $end

$scope function mix_col $end
$var reg       32 }    mix_col [31:0] $end
$var reg        8 ~    s0 [7:0] $end
$var reg        8 !"   s1 [7:0] $end
$var reg        8 ""   s2 [7:0] $end
$var reg        8 #"   s3 [7:0] $end
$var reg        8 $"   s0_o [7:0] $end
$var reg        8 %"   s1_o [7:0] $end
$var reg        8 &"   s2_o [7:0] $end
$var reg        8 '"   s3_o [7:0] $end
$upscope $end

$scope function xtime $end
$var reg        8 ("   xtime [7:0] $end
$var reg        8 )"   b [7:0] $end
$upscope $end

$scope module u0 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       1 /    clk $end
$var wire       1 1    kld $end
$var wire     128 3    key [127:0] $end
$var wire      32 6    wo_0 [31:0] $end
$var wire      32 7    wo_1 [31:0] $end
$var wire      32 8    wo_2 [31:0] $end
$var wire      32 9    wo_3 [31:0] $end
$var wire      32 *"   tmp_w [31:0] $end
$var wire      32 +"   subword [31:0] $end
$var wire      32 ,"   rcon [31:0] $end

$scope module u0 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 -"   a [7:0] $end
$var reg        8 ."   d [7:0] $end
$upscope $end

$scope module u1 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 /"   a [7:0] $end
$var reg        8 0"   d [7:0] $end
$upscope $end

$scope module u2 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 1"   a [7:0] $end
$var reg        8 2"   d [7:0] $end
$upscope $end

$scope module u3 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 3"   a [7:0] $end
$var reg        8 4"   d [7:0] $end
$upscope $end

$scope module r0 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       1 /    clk $end
$var wire       1 1    kld $end
$var reg       32 5"   out [31:0] $end
$var reg        4 6"   rcnt [3:0] $end
$var wire       4 7"   rcnt_next [3:0] $end

$scope function frcon $end
$var reg       32 8"   frcon [31:0] $end
$var reg        4 9"   i [3:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module us00 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 :"   a [7:0] $end
$var reg        8 ;"   d [7:0] $end
$upscope $end

$scope module us01 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 <"   a [7:0] $end
$var reg        8 ="   d [7:0] $end
$upscope $end

$scope module us02 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 >"   a [7:0] $end
$var reg        8 ?"   d [7:0] $end
$upscope $end

$scope module us03 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 @"   a [7:0] $end
$var reg        8 A"   d [7:0] $end
$upscope $end

$scope module us10 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 B"   a [7:0] $end
$var reg        8 C"   d [7:0] $end
$upscope $end

$scope module us11 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 D"   a [7:0] $end
$var reg        8 E"   d [7:0] $end
$upscope $end

$scope module us12 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 F"   a [7:0] $end
$var reg        8 G"   d [7:0] $end
$upscope $end

$scope module us13 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 H"   a [7:0] $end
$var reg        8 I"   d [7:0] $end
$upscope $end

$scope module us20 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 J"   a [7:0] $end
$var reg        8 K"   d [7:0] $end
$upscope $end

$scope module us21 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 L"   a [7:0] $end
$var reg        8 M"   d [7:0] $end
$upscope $end

$scope module us22 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 N"   a [7:0] $end
$var reg        8 O"   d [7:0] $end
$upscope $end

$scope module us23 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 P"   a [7:0] $end
$var reg        8 Q"   d [7:0] $end
$upscope $end

$scope module us30 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 R"   a [7:0] $end
$var reg        8 S"   d [7:0] $end
$upscope $end

$scope module us31 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 T"   a [7:0] $end
$var reg        8 U"   d [7:0] $end
$upscope $end

$scope module us32 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 V"   a [7:0] $end
$var reg        8 W"   d [7:0] $end
$upscope $end

$scope module us33 $end
$comment Unit is _vcs_unit__1989571668 $end
$var wire       8 X"   a [7:0] $end
$var reg        8 Y"   d [7:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module test_bench_top $end
$comment Unit is _vcs_unit__1989571668 $end
$comment Port ds refers to top.IFC.bench $end
$var reg        1 Z"   id_t $end
$var integer   32 ["   cycle [31:0] $end
$var integer   32 \"   check [31:0] $end
$var integer   32 ]"   temp [31:0] $end
$var integer   32 ^"   t2 [31:0] $end

$scope task do_cycle $end
$upscope $end

$scope begin unnamed$$_2 $end
$upscope $end

$scope begin unnamed$$_3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bxxxxxxxx Q"
bxxxxxxxx b
bxxxxxxxx F"
bxxxxxxxx W
bxxxxxxxx ;"
bxxxxxxxx L
bxxxxxxxx 0"
bxxxxxxxx A
bxxxxxxxx %"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 6
bxxxxxxxx x
b00000000000000000000000000000000 \"
b00110011100111111100100110011010011101100101101000101110011000110001101111101000111001111000110101111100110000100101010011111000 +
bxxxxxxxx m
bxxxxxxxx n
bxxxxxxxx R"
bxxxxxxxx c
bxxxxxxxx G"
bxxxxxxxx X
bxxxxxxxx <"
bxxxxxxxx M
bxxxxxxxx 1"
bxxxxxxxx B
bxxxxxxxx &"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 7
bxxxxxxxx y
b00000000000000000000000000000000 ]"
b11110010111110111110001101000110001010011100110110111010101010110101000111111111010010101110110001100111110001100110100101110011 ,
b00000000000000000000000000000001 ^"
x-
bxxxxxxxx o
bxxxxxxxx S"
0"
bxxxxxxxx d
bxxxxxxxx H"
bxxxxxxxx Y
bxxxxxxxx ="
bxxxxxxxx N
bxxxxxxxx 2"
bxxxxxxxx C
bxxxxxxxx '"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 8
bxxxxxxxx z
x{
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx .
bxxxxxxxx p
bxxxxxxxx T"
x#
bxxxxxxxx e
bxxxxxxxx I"
bxxxxxxxx Z
bxxxxxxxx >"
bxxxxxxxx O
bxxxxxxxx 3"
bxxxxxxxx D
bxxxxxxxx ("
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 9
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx :
bxxxx |
0/
bxxxxxxxx q
bxxxxxxxx U"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx $
bxxxxxxxx f
bxxxxxxxx J"
bxxxxxxxx [
bxxxxxxxx ?"
bxxxxxxxx P
bxxxxxxxx 4"
bxxxxxxxx E
bxxxxxxxx )"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx *"
bxxxxxxxx ;
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx }
x0
bxxxxxxxx r
bxxxxxxxx V"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
bxxxxxxxx g
bxxxxxxxx K"
bxxxxxxxx \
bxxxxxxxx @"
bxxxxxxxx Q
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5"
bxxxxxxxx F
bxxxxxxxx G
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +"
bxxxxxxxx <
bxxxxxxxx ~
x1
bxxxxxxxx s
bxxxxxxxx W"
x&
bxxxxxxxx h
bxxxxxxxx L"
bxxxxxxxx ]
bxxxxxxxx A"
bxxxxxxxx R
bxxxx 6"
bxxxx 7"
bxxxxxxxx H
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ,"
bxxxxxxxx =
bxxxxxxxx !"
x2
bxxxxxxxx t
bxxxxxxxx X"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx '
bxxxxxxxx i
bxxxxxxxx M"
bxxxxxxxx ^
bxxxxxxxx B"
bxxxxxxxx S
bxxxxxxxx T
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 8"
bxxxxxxxx I
bxxxxxxxx -"
bxxxxxxxx >
bxxxxxxxx ""
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 3
bxxxxxxxx u
bxxxxxxxx Y"
x(
bxxxxxxxx j
bxxxxxxxx N"
bxxxxxxxx _
bxxxxxxxx C"
bxxxxxxxx D"
bxxxxxxxx U
bxxxx 9"
bxxxxxxxx J
bxxxxxxxx ."
bxxxxxxxx ?
bxxxxxxxx #"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 4
bxxxxxxxx v
1Z"
1)
bxxxxxxxx k
bxxxxxxxx O"
bxxxxxxxx `
bxxxxxxxx a
bxxxxxxxx E"
bxxxxxxxx V
bxxxxxxxx :"
bxxxxxxxx K
bxxxxxxxx /"
bxxxxxxxx @
bxxxxxxxx $"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5
bxxxxxxxx w
b00000000000000000000000000000000 ["
0*
bxxxxxxxx l
bxxxxxxxx P"
$end
#5000
b00100001001111011101110010000111000011101000001001110100010000011001101110110100010101000001000110101011101100101100110111000110 +
b01011000111010010101111011010100001001010101110100000101000101110011000101011000101000110101101001100110001100100000110110110111 ,
b00000000000000000000000000000010 ^"
1"
0#
1/
b00100001001111011101110010000111000011101000001001110100010000011001101110110100010101000001000110101011101100101100110111000110 $
10
b01011000111010010101111011010100001001010101110100000101000101110011000101011000101000110101101001100110001100100000110110110111 %
01
b00000000000000000000000000000000 8"
b00100001001111011101110010000111000011101000001001110100010000011001101110110100010101000001000110101011101100101100110111000110 3
1(
b01011000111010010101111011010100001001010101110100000101000101110011000101011000101000110101101001100110001100100000110110110111 4
#6000
b00000000000000000000000000000000 5"
b00000000000000000000000000000000 ,"
#10000
0"
0/
#15000
b11101100000110001101101101011100001100101010111100111100010101001110110010110000001110111111101110001111001110000101110000101010 +
b11101010110111000110101110010110001111100000000101111110100101110100000111100001111111000110011101110000111010010011111010100001 ,
b00000000000000000000000000000011 ^"
b11101100000110001101101101011100001100101010111100111100010101001110110010110000001110111111101110001111001110000101110000101010 $
b11101010110111000110101110010110001111100000000101111110100101110100000111100001111111000110011101110000111010010011111010100001 %
b11101100000110001101101101011100001100101010111100111100010101001110110010110000001110111111101110001111001110000101110000101010 3
b11101010110111000110101110010110001111100000000101111110100101110100000111100001111111000110011101110000111010010011111010100001 4
1"
1/
#16000
0{
#20000
0"
0/
#25000
b00000000000000000000000000000001 ]"
1*
1#
11
b10110001111010111111000110110011101010001001100100001111100101011000100111111001010111001011101101110101110110001011111001100001 +
b00000101001111000111110010010100111110110010100111010001111001101111101111111010101010100011101000000010000110101111111001000011 ,
b00000000000000000000000000000100 ^"
b10110001111010111111000110110011101010001001100100001111100101011000100111111001010111001011101101110101110110001011111001100001 $
b00000101001111000111110010010100111110110010100111010001111001101111101111111010101010100011101000000010000110101111111001000011 %
b10110001111010111111000110110011101010001001100100001111100101011000100111111001010111001011101101110101110110001011111001100001 3
b00000101001111000111110010010100111110110010100111010001111001101111101111111010101010100011101000000010000110101111111001000011 4
1"
1/
#30000
0"
0/
#35000
b00000000000000000000000000000010 ]"
0*
0#
01
b01011110010010110111100101100011000101000111001101011010110001010001110001111011011001001100010100011111001000110001111010101000 +
b01001000010001110110010010111101110010100000101111001011110100001110100110100001001110101110010100000101111011111111011100000000 ,
b00000000000000000000000000000101 ^"
b01011110010010110111100101100011000101000111001101011010110001010001110001111011011001001100010100011111001000110001111010101000 $
b01001000010001110110010010111101110010100000101111001011110100001110100110100001001110101110010100000101111011111111011100000000 %
b01011110010010110111100101100011000101000111001101011010110001010001110001111011011001001100010100011111001000110001111010101000 3
b01001000010001110110010010111101110010100000101111001011110100001110100110100001001110101110010100000101111011111111011100000000 4
1"
1/
#36000
b10101110 0"
b10110001111010111111000110110011 6
b01100001 1"
b10101000100110010000111110010101 7
b11101111 2"
b10001001111110010101110010111011 8
b01110101 3"
b01110101110110001011111001100001 9
b00000101001111000111110010010100111110110010100111010001111001101111101111111010101010100011101000000010000110101111111001000011 :
b1011 |
b10011101 4"
b01110101110110001011111001100001 *"
b01100001101011101110111110011101 +"
0&
b0000 6"
b0001 7"
02
b11011000 -"
b01100001 ."
b10111110 /"
b00000001000000000000000000000000 5"
b00000001000000000000000000000000 ,"
1{
#40000
0"
0/
#45000
0-
b0001 9"
b00000010000000000000000000000000 8"
1"
1/
